{"version":3,"sources":["components/Form/index.js","components/Form/Form.jsx","components/ContactList/index.js","components/ContactList/ContactList.jsx","components/Filter/index.js","components/Filter/Filter.jsx","components/App/index.js","components/App/App.jsx","index.js"],"names":["Form","state","name","number","inputChange","e","currentTarget","value","setState","addContactItem","preventDefault","props","onSubmit","this","type","onChange","Component","ContactList","onFilter","onDelete","map","el","id","onClick","Filter","App","contacts","filter","prevState","some","toLowerCase","newContact","shortId","generate","alert","filterContacts","normalizeSearch","includes","deleteContact","contact","filterInput","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8337f3eb.chunk.js","sourcesContent":["import Form from './Form';\n\nexport default Form;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Form extends Component { \n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n  state = {\n    name: '',\n    number: '',\n  };\n  inputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n  addContactItem = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state); //add to this.state by submit\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <>\n        <form onSubmit={this.addContactItem}>\n          <label>\n            Name\n            <br/>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.inputChange}\n            />\n          </label>\n          <br/>\n          <br/>\n          <label>\n            Number\n            <br/>\n            <input\n              type=\"number\"\n              name=\"number\"\n              value={number}\n              onChange={this.inputChange}\n            />\n          </label>\n          <br/>\n          <br/>\n          <button type=\"submit\">Add contact</button>\n      </form>\n      </>\n    );\n  }\n}\n\nForm.propTypes = {\n  state: PropTypes.object,\n};\n\nexport default Form;","import ContactList from './ContactList';\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContactList = props => {\n  const { onFilter, onDelete } = props;\n\n  return (\n    <ul>\n      {onFilter.map(el => {\n        const { name, number, id } = el;\n        return (\n          <li key={id}>\n            {' '}\n            {name}: {number}{' '}\n            <button type=\"button\" onClick={() => onDelete(id)}>\n              Delete\n            </button>\n            <br />\n            <br/>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  onFilter: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;","import Filter from './Filter';\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = props => {\n  return (\n    <label>\n      Find contacts by name\n      <br/> \n      <input type=\"text\" name=\"filter\" onChange={props.onFilter} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  onFilter: PropTypes.func.isRequired,\n}\n\nexport default Filter;","import App from './App.jsx';\n\nexport default App;\n","import React, { Component } from 'react';\nimport shortId from 'shortid';\nimport Form from '../Form';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\n\nclass App extends Component { \n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: '',\n  };\n\n  addContactItem = e => {\n    this.setState(prevState => {\n      if (this.state.contacts.some(el => el.name.toLowerCase() === e.name)) {\n        alert(`${e.name} is already in contacts`)\n      } else {\n        const newContact = {\n          name: e.name,\n          number: e.number,\n          id: shortId.generate(),\n        }\n        return { contacts: [...prevState.contacts, newContact] };\n\n      }\n    })\n  };\n  \n  filterContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizeSearch = filter.toLowerCase();\n\n    return contacts.filter(contacts =>\n      contacts.name.toLowerCase().includes(normalizeSearch),\n    );\n  };\n  deleteContact = contact => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(el => el.id !== contact),\n      };\n    });\n  };\n\n  filterInput = e => {\n    const { name, value } = e.currentTarget;\n    return this.setState({ [name]: value });\n  };\n\n  render () {\n     return (\n       <>\n         <h1>Phonebook</h1>\n         <Form onSubmit={this.addContactItem}/>\n         <h2>Contacts</h2>\n         <Filter onFilter={this.filterInput}/>\n         <ContactList onFilter={this.filterContacts()} onDelete={this.deleteContact}/>\n       </>\n    );\n  }\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}